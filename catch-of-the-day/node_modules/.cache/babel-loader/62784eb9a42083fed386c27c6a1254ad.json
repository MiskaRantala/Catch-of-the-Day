{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/Inventory.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n/**\nThis app was created during \"React for Beginners\" -course by Wes Bos.\n\nInventory is for the right column of the market page.\nIt holds a title and forms for adding and deleting fish.\n*/\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Inventory, _React$Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uid: null,\n      owner: null // checks if the user is logged in when opening the page\n\n    };\n\n    _this.authHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(authData) {\n        var store;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return base.fetch(_this.props.storeId, {\n                  context: _assertThisInitialized(_assertThisInitialized(_this))\n                });\n\n              case 2:\n                store = _context.sent;\n                console.log(store); // claim it if there is no owner\n\n                if (store.owner) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 7;\n                return base.post(\"\".concat(_this.props.storeId, \"/owner\"), {\n                  data: authData.user.uid\n                });\n\n              case 7:\n                // sets the state of the inventory component to reflect the current user\n                _this.setState({\n                  uid: authData.user.uid,\n                  owner: store.owner || authData.user.uid\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.authenticate = function (provider) {\n      var authProvider = new firebase.auth[\"\".concat(provider, \"AuthProvider\")]();\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);\n    };\n\n    _this.logout =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return firebase.auth().signOut();\n\n            case 2:\n              _this.setState({\n                uid: null\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.authHandler({\n            user: user\n          });\n        }\n      });\n    } // handles authenticator data\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // logout button\n      var logout = React.createElement(\"button\", {\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Log out!\"); //check if the user is logged in\n\n      if (!this.state.uid) {\n        return React.createElement(Login, {\n          authenticate: this.authenticate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      } // check if they are not the owner of the store\n\n\n      if (this.state.uid !== this.state.owner) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Sorry, you are not the owner!\"), logout);\n      } // if the user is logged in and the owner, show inventory page\n\n\n      return (// this div has the title and forms inside of it\n        React.createElement(\"div\", {\n          className: \"inventory\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Inventory\"), logout, Object.keys(this.props.fishes).map(function (key) {\n          return React.createElement(EditFishForm, {\n            key: key,\n            index: key,\n            fish: _this3.props.fishes[key],\n            updateFish: _this3.props.updateFish,\n            deleteFish: _this3.props.deleteFish,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          });\n        }), React.createElement(AddFishForm, {\n          addFish: this.props.addFish,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.props.loadSampleFishes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Load Sample Fishes\"))\n      );\n    }\n  }]);\n\n  return Inventory;\n}(React.Component); // exports the file\n\n\nInventory.propTypes = {\n  fishes: PropTypes.object,\n  updateFish: PropTypes.func,\n  deleteFish: PropTypes.func,\n  loadSampleFishes: PropTypes.func\n};\nexport default Inventory;","map":{"version":3,"sources":["/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/Inventory.js"],"names":["React","PropTypes","firebase","AddFishForm","EditFishForm","Login","base","firebaseApp","Inventory","state","uid","owner","authHandler","authData","fetch","props","storeId","context","store","console","log","post","data","user","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","Component","propTypes","object","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\n/**\nThis app was created during \"React for Beginners\" -course by Wes Bos.\n\nInventory is for the right column of the market page.\nIt holds a title and forms for adding and deleting fish.\n*/\n\nclass Inventory extends React.Component {\n\n    // propTypes to Inventory slots\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    };\n\n    // states for user's id and store's owner\n    state = {\n        uid: null,\n        owner: null\n    }\n\n    // checks if the user is logged in when opening the page\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({ user })\n            }\n        })\n    }\n\n    // handles authenticator data\n    authHandler = async (authData) => {\n\n        // looks up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        console.log(store);\n\n        // claim it if there is no owner\n        if (!store.owner) {\n\n            // save it as own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            })\n        }\n\n        // sets the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n    }\n\n    // authenticating\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    }\n\n    logout = async () => {\n        await firebase.auth().signOut();\n        this.setState({ uid: null});\n}\n\n    render() {\n\n        // logout button\n        const logout = <button onClick={this.logout}>Log out!</button>\n\n        //check if the user is logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate}/>;\n        }\n\n        // check if they are not the owner of the store\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    { /* inform the user that they're not the owner */ }\n                    <p>Sorry, you are not the owner!</p>\n\n                    { /* log out button */ }\n                    {logout}\n                </div>\n            )\n        }\n\n        // if the user is logged in and the owner, show inventory page\n        return (\n\n            // this div has the title and forms inside of it\n            <div className=\"inventory\">\n\n                { /* title */ }\n                <h2>Inventory</h2>\n\n                { /* log out button */ }\n                {logout}\n\n                { /* Form for editing the fish form */ }\n                {Object.keys(this.props.fishes)\n                       .map(key => (\n                           <EditFishForm\n                               key={key}\n                               index={key}\n                               fish={this.props.fishes[key]}\n                               updateFish={this.props.updateFish}\n                               deleteFish={this.props.deleteFish}\n                           /> )\n                       )\n                }\n\n                { /* Form for adding fish, AddFishForm */ }\n                <AddFishForm addFish={this.props.addFish} />\n\n                { /* Button to add sample fishes, so user doesn't have to add everything by themselves */ }\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        );\n    }\n}\n\n// exports the file\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}