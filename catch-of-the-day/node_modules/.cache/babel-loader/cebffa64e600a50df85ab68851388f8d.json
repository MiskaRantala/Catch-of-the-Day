{"ast":null,"code":"import _classCallCheck from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/Order.js\";\nimport React from \"react\";\nimport { formatPrice } from \"../helpers\";\n/**\nThis app was created during \"React for Beginners\" -course by Wes Bos.\n\nOrder is for the middle column of the market page.\nIt holds a title and user's order from the market place.\n*/\n\nvar Order =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  function Order() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Order)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderOrder = function (key) {\n      // shows the fish\n      var fish = _this.props.fishes[key]; // shows how many fish there is\n\n      var count = _this.props.order[key]; // checks if the fish is available\n\n      var isAvailable = fish && fish.status === \"available\"; // makes sure the fish is loaded before continuing\n\n      if (!fish) return null; // if the shop runs out of a certain fish, it's informed to the customer and deleted from the order\n\n      if (!isAvailable) {\n        return React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"Sorry, \", fish ? fish.name : \"fish\", \" is no longer available. \");\n      } // sends out order-details and the cost\n\n\n      return React.createElement(\"li\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, count, \" kg \", fish.name, formatPrice(count * fish.price));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // this picks up the correct fish from the menu\n      var orderIds = Object.keys(this.props.order); // this shows the total price of the order\n\n      var total = orderIds.reduce(function (prevTotal, key) {\n        // shows the fish\n        var fish = _this2.props.fishes[key]; // shows how many fish there is\n\n        var count = _this2.props.order[key]; // checks whether the fish is available or not, even if the fish is in the order already\n\n        var isAvailable = fish && fish.status === \"available\";\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return (// has the title and elements inside\n        React.createElement(\"div\", {\n          className: \"order-wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Order\"), React.createElement(\"ul\", {\n          className: \"order\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, orderIds.map(this.renderOrder), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.props.removeFromOrder(_this2.props.index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Remove fish\")), React.createElement(\"div\", {\n          className: \"total\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Total:\", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, formatPrice(total))))\n      );\n    }\n  }]);\n\n  return Order;\n}(React.Component); // exports the page\n\n\nexport default Order;","map":{"version":3,"sources":["/Users/miska/IdeaProjects/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","name","price","orderIds","Object","keys","total","reduce","prevTotal","map","removeFromOrder","index","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA;;;;;;;IAOMC,K;;;;;;;;;;;;;;;;;;UAGFC,W,GAAc,UAACC,GAAD,EAAS;AAEnB;AACA,UAAMC,IAAI,GAAG,MAAKC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb,CAHmB,CAKnB;;AACA,UAAMI,KAAK,GAAG,MAAKF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd,CANmB,CAQnB;;AACA,UAAMM,WAAW,GAAGL,IAAI,IAAIA,IAAI,CAACM,MAAL,KAAgB,WAA5C,CATmB,CAWnB;;AACA,UAAG,CAACN,IAAJ,EAAU,OAAO,IAAP,CAZS,CAcnB;;AACA,UAAG,CAACK,WAAJ,EAAiB;AACb,eAAO;AAAI,UAAA,GAAG,EAAEN,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsBC,IAAI,GAAGA,IAAI,CAACO,IAAR,GAAe,MAAzC,8BAAP;AACH,OAjBkB,CAmBnB;;;AACA,aAAO;AAAI,QAAA,GAAG,EAAER,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGFI,KAHE,UAGSH,IAAI,CAACO,IAHd,EAMFX,WAAW,CAACO,KAAK,GAAGH,IAAI,CAACQ,KAAd,CANT,CAAP;AAQH,K;;;;;;;6BAEQ;AAAA;;AAEL;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKV,KAAL,CAAWG,KAAvB,CAAjB,CAHK,CAKL;;AACA,UAAMQ,KAAK,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAACC,SAAD,EAAYf,GAAZ,EAAoB;AAE9C;AACA,YAAMC,IAAI,GAAG,MAAI,CAACC,KAAL,CAAWC,MAAX,CAAkBH,GAAlB,CAAb,CAH8C,CAK9C;;AACA,YAAMI,KAAK,GAAG,MAAI,CAACF,KAAL,CAAWG,KAAX,CAAiBL,GAAjB,CAAd,CAN8C,CAQ9C;;AACA,YAAMM,WAAW,GAAGL,IAAI,IAAIA,IAAI,CAACM,MAAL,KAAgB,WAA5C;;AACA,YAAID,WAAJ,EAAiB;AACb,iBAAOS,SAAS,GAAIX,KAAK,GAAGH,IAAI,CAACQ,KAAjC;AACH;;AACD,eAAOM,SAAP;AACH,OAda,EAcX,CAdW,CAAd;AAgBA,aAEI;AACA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,EAMI;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKL,QAAQ,CAACM,GAAT,CAAa,KAAKjB,WAAlB,CADL,EAEI;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACG,KAAL,CAAWe,eAAX,CAA2B,MAAI,CAACf,KAAL,CAAWgB,KAAtC,CAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,CANJ,EAcI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASrB,WAAW,CAACgB,KAAD,CAApB,CAFJ,CAdJ;AAHJ;AAuBH;;;;EA9EejB,KAAK,CAACuB,S,GAiF1B;;;AACA,eAAerB,KAAf","sourcesContent":["import React from \"react\";\nimport { formatPrice } from \"../helpers\";\n\n/**\nThis app was created during \"React for Beginners\" -course by Wes Bos.\n\nOrder is for the middle column of the market page.\nIt holds a title and user's order from the market place.\n*/\n\nclass Order extends React.Component {\n\n    // makes the code smoother\n    renderOrder = (key) => {\n\n        // shows the fish\n        const fish = this.props.fishes[key];\n\n        // shows how many fish there is\n        const count = this.props.order[key];\n\n        // checks if the fish is available\n        const isAvailable = fish && fish.status === \"available\";\n\n        // makes sure the fish is loaded before continuing\n        if(!fish) return null;\n\n        // if the shop runs out of a certain fish, it's informed to the customer and deleted from the order\n        if(!isAvailable) {\n            return <li key={key}>Sorry, {fish ? fish.name : \"fish\"} is no longer available. </li>\n        }\n\n        // sends out order-details and the cost\n        return <li key={key}>\n\n            { /* sends out single fish-type's details */ }\n            {count} kg {fish.name}\n\n            { /* sends out the total price */ }\n            {formatPrice(count * fish.price)}\n        </li>;\n    };\n\n    render() {\n\n        // this picks up the correct fish from the menu\n        const orderIds = Object.keys(this.props.order);\n\n        // this shows the total price of the order\n        const total = orderIds.reduce((prevTotal, key) => {\n\n            // shows the fish\n            const fish = this.props.fishes[key];\n\n            // shows how many fish there is\n            const count = this.props.order[key];\n\n            // checks whether the fish is available or not, even if the fish is in the order already\n            const isAvailable = fish && fish.status === \"available\";\n            if (isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n\n            // has the title and elements inside\n            <div className=\"order-wrap\">\n\n                { /* title */ }\n                <h2>Order</h2>\n\n                { /* listing everything in the user's order */ }\n                <ul className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                    <button onClick={() => this.props.removeFromOrder(this.props.index)}>\n                        Remove fish\n                    </button>\n                </ul>\n\n                { /* Shows the total price panel in the app */ }\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\n\n// exports the page\nexport default Order;"]},"metadata":{},"sourceType":"module"}